# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  WebAppOneProject: '**/Sample.Pipelines.WebApiOne.csproj'
  WebAppTwoProject: '**/Sample.Pipelines.WebApiTwo.csproj'


jobs:
- job: WebApp1_CI
  displayName: Web App 1 - CI
  steps:
  - task: DotNetCoreCLI@2
    displayName: BUILD Web App 1
    inputs:
      command: 'build'
      projects: '$(WebAppOneProject)'

  - task: DotNetCoreCLI@2
    displayName: Publish Web App One
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '$(WebAppOneProject)'
      arguments: '--no-build -o "$(Build.ArtifactStagingDirectory)"'

  - task: PublishBuildArtifacts@1
    displayName: Publish Build Web API One 
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'webAppOne'

- job: WebApp2_CI
  displayName: Web App 2 - CI
  steps:
  - task: DotNetCoreCLI@2
    displayName: BUILD Web App 2
    inputs:
      command: 'build'
      projects: '$(WebAppTwoProject)'

  - task: DotNetCoreCLI@2
    displayName: Publish Web App Two
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '$(WebAppTwoProject)'
      arguments: '--no-build -o "$(Build.ArtifactStagingDirectory)"'

  - task: PublishBuildArtifacts@1
    displayName: Publish Build Web API Two 
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'webAppTwo'