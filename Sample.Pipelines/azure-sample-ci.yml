# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

jobs:
- job: WebApp1_CI
  displayName: Web App 1 - CI
  steps:
  - script: echo Starting build for Web App One
    displayName: 'Starting build'

  - task: DotNetCoreCLI@2
    displayName: BUILD WEb App 1
    inputs:
      command: 'build'
      projects: 'Sample.Pipelines/Sample.Pipelines.WebApiOne/Sample.Pipelines.WebApiOne.csproj'

  - script: echo Finished build for Web App One
    displayName: 'Finished build'

# - job: WebApp2_CI
#   displayName: Web App 2 - CI
#   steps:
#   - script: echo Starting build for Web App Two
#     displayName: 'Starting build'

#   - task: DotNetCoreCLI@2
#     inputs:
#       command: 'build'
#       projects: 'Sample.Pipelines/Sample.Pipelines.WebApiTwo.csproj'

#   - script: echo Finished build for Web App Two
#     displayName: 'Finished build'

# - job: PublishArtifacts
#   displayName: Publish Artifacts
#   dependsOn:
#     - DotnetCI
#     - JsCI
#   steps:
#   - script: echo Publish artifacts
#     displayName: Initialize publish artifacts
#   - task: PublishBuildArtifacts@1
#     displayName: Publish Build Artifacts 
#     inputs:
#       PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#       ArtifactName: 'drop'
#       publishLocation: 'Container'