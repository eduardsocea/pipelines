# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

jobs:
- job: WebApp1_CI
  displayName: Web App 1 - CI
  steps:
  - script: echo Starting build for Web App One
    displayName: 'Starting build'

  - task: DotNetCoreCLI@2
    displayName: BUILD WEb App 1
    inputs:
      command: 'build'
      projects: './Sample.Pipelines/Sample.Pipelines.WebApiOne/Sample.Pipelines.WebApiOne.csproj'

  - task: DotNetCoreCLI@2
    displayName: Publish Web App One
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: './Sample.Pipelines/Sample.Pipelines.WebApiOne/Sample.Pipelines.WebApiOne.csproj'
      arguments: '--no-build -o "$(Build.ArtifactStagingDirectory)/webapp"'

  - script: echo Finished build for Web App One
    displayName: 'Finished build'

# - job: WebApp2_CI
#   displayName: Web App 2 - CI
#   steps:
#   - script: echo Starting build for Web App Two
#     displayName: 'Starting build'

#   - task: DotNetCoreCLI@2
#     displayName: BUILD WEb App 2
#     inputs:
#       command: 'build'
#       projects: 'Sample.Pipelines/Sample.Pipelines.WebApiTwo/Sample.Pipelines.WebApiTwo.csproj'

#   - task: DotNetCoreCLI@2
#     displayName: Publish Web App One
#     inputs:
#       command: 'publish'
#       publishWebProjects: false
#       projects: 'Sample.Pipelines/Sample.Pipelines.WebApiTwo/Sample.Pipelines.WebApiTwo.csproj'
#       arguments: '--no-build -o "$(Build.ArtifactStagingDirectory)/webapp"'

#   - script: echo Finished build for Web App Two
#     displayName: 'Finished build'

- job: PublishArtifacts
  displayName: Publish Artifacts
  dependsOn:
    - WebApp1_CI
    # - WebApp2_CI
  steps:
  - script: echo Publish artifacts
    displayName: Start publish artifacts
  - task: PublishBuildArtifacts@1
    displayName: Publish Build Web API One 
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/webapp'
      ArtifactName: 'webapp'
      # publishLocation: 'Container'
  # - task: PublishBuildArtifacts@1
  #   displayName: Publish Build Web API Two 
  #   inputs:
  #     PathtoPublish: '$(Build.ArtifactStagingDirectory)/Sample.Pipelines.WebApiTwo/'
  #     ArtifactName: 'drop'
  #     publishLocation: 'Container'
  - script: echo Finished Publish artifacts
    displayName: Finished publish artifacts